// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// User Schema for Postgres
model User {
  id        String      @id @default(uuid())
  email     String      @unique
  provider  Provider
  streams   Stream[]
  upvote    Upvote[]
}


// Stream Schema for Postgres
model Stream {
  id          String      @id   @default(uuid())
  type        StreamType
  url         String
  extractedId String
  active      Boolean     @default(true)
  userId      String
  upvote      Upvote[]
  user        User        @relation(fields: [userId], references: [id])
}

// Upvote Schema for postgres
model Upvote {
  id          String      @id @default(uuid())
  userId      String
  streamId    String
  user        User        @relation(fields: [userId], references: [id])
  stream      Stream      @relation(fields: [streamId], references: [id])
  @@unique([userId, streamId])
}




// .................ENUMS TO USE IN DB.................//

// StreamType enums
enum StreamType{
  Spotify
  Youtube
}

// Provider enums
enum Provider{
  Google
}

// Role enums
// enum Role{
//   Streamer
//   EndUser
// }
